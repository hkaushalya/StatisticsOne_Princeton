{
    "contents" : "# Statistics One, 2013, Lab 5\n\n# Lab goals\n#   Read a datafile into R\n#   Print summary statistics\n#   Conduct correlation analyses, including NHSTs\n#   Conduct regression analyses, emphasis on standard error, confidence intervals, and model comparison \n\n# Example\n#   A correlational study investigating predictors of physcial endurance in adults\n#     Outcome variable (Y) is physical endurance\n#     Predictors (X) are age and number of years actively engaged in exercise/sports\n#     Initial analyses assume a sample size of N = 200 \n#     Analyses are then repeated with a sample size of N = 20\n\n# Check your working directory\n# getwd()\n# If necessary, set your working directory\n# setwd(\"/Volumes/Conway/R\")\n\n# If necessary, install packages\n# install.packages(\"psych\")\n# install.packages(\"ggplot2\")\n\n# Load packages\nlibrary(psych)\nlibrary(ggplot2)\n\n# Read data into a dataframe called PE (physical endurance)\nPE <- read.table(\"Stats1.13.Lab.05.txt\", header = T)\n\n# If you want to view the data\n# View(PE)\n# edit(PE)\n\n# Summary statistics\ndescribe(PE) \n\n# Illustration of standard error calculation\n# Standard error = Standard deviation divided by the square root of sample size\n# se = sd / sqrt(N)\ntable1 <- describe(PE)\ntable1\nage.sd <- table1[2,4]\nage.sd\nage.n <- table1[2,2]\nage.n\nage.se <- table1[2,4] / sqrt(table1[2,2])\nage.se\nage.se == table1[2,13]\n\n# Correlation analysis \ncor(PE[2:4]) \n\n# NHST for each correlation coefficient\ncor.test(PE$age, PE$activeyears)\ncor.test(PE$endurance, PE$activeyears)\ncor.test(PE$endurance, PE$age)\n\n# Save the correlations in a table to illustrate calculation of regression coefficients\ntable2 <- cor(PE[2:4])\n\n\n# Regression analyses, unstandardized\nmodel1 <- lm(PE$endurance ~ PE$age)\nsummary(model1)\n\n# Illustration of calculation of regression coefficient\n# Regression coefficient = correlation coefficient * (standard deviation of Y / standard deviation of X)\n# B = r * (sdy / sdx)\ntable2\ntable2[3,1]\nmodel1.B <- table2[3,1] * (table1[4,4] / table1[2,4])\nmodel1.B\n\n# Illustration of calculation of standard error of the regression coefficient\n# Standard error = Square root [ (Sums of Squares.Residual / (N - 2) ) / (Sums of Squares.X) ]\n# se.B = sqrt[ (SS.resid / (N-2) ) / SS.X )]\ntable3 <- anova(model1)\ntable3\nSS.resid <- table3[2,2]\nSS.resid\ndf <- table3[2,1]\ndf\nSS.X <- table3[1,2] + table3[2,2]\nSS.X\nse.B <- sqrt( (SS.resid / df) / SS.X) \nse.B\n\n# Print 95% confidence interval for the regression coefficient\nconfint(model1) \n\n# Illustration of calculation of confidence interval\n# Upper value = B + (tcrit * se.B) and Lower value = B - (tcrit * se.B)\ntcrit <- qt(c(.025, .975), df = 198)\ntcrit\ninterval <- -0.08772 + (tcrit*se.B)\ninterval\n\n# Scatterplot with confidence interval around the regression line\nggplot(PE, aes(x = age, y = endurance)) + geom_smooth(method = \"lm\") + \n  geom_point() \n  \n  \nmodel2 <- lm(PE$endurance ~ PE$activeyears)\nsummary(model2)\nconfint(model2) #Prints 95% confidence intervals for the regression coefficients\n\nggplot(PE, aes(x = activeyears, y = endurance)) + geom_smooth(method = \"lm\") + \n  geom_point() \n\n\nmodel3 <- lm(PE$endurance ~ PE$age + PE$activeyears)\nsummary(model3)\nconfint(model3) # Prints 95% confidence intervals for the regression coefficients\n\n# To visualize model3, save the predicted scores as a new variable and then plot with endurance\nPE$predicted <- fitted(model3)\n\nggplot(PE, aes(x = predicted, y = endurance)) + geom_smooth(method = \"lm\") + \n  geom_point() \n\n  \n# Conduct a model comparison NHST to compare the fit of model2 to the fit of model3\nanova(model2, model3)\n\n\n# Regression analyses, standardized\nmodel1.z <- lm(scale(PE$endurance) ~ scale(PE$age))\nsummary(model1.z)\nconfint(model1.z)\n\nmodel2.z <- lm(scale(PE$endurance) ~ scale(PE$activeyears))\nsummary(model2.z)\nconfint(model2.z)\n\nmodel3.z <- lm(scale(PE$endurance) ~ scale(PE$age) + scale(PE$activeyears))\nsummary(model3.z)\nconfint(model3.z)\n\n# Conduct a model comparison NHST to compare the fit of model2.z to the fit of model3.z\nanova(model2.z, model3.z)\n# Note that the F value and the p value are the same as from the unstandardized model comparison\nanova(model2, model3)\n\n\n# Now take a random subset of the data such that N = 20 \nPE.20 <- PE[sample(nrow(PE), 20), ]\n\n# Summary statistics\ndescribe(PE.20) \n\n# Correlation analysis \nround(cor(PE.20[2:4]), 2) # Round to 2 decimal places \n\ncor.test(PE.20$age, PE.20$activeyears)\ncor.test(PE.20$endurance, PE.20$activeyears)\ncor.test(PE.20$endurance, PE.20$age)\n\n# Regression analyses, unstandardized\nmodel1.20 <- lm(PE.20$endurance ~ PE.20$age)\nsummary(model1.20)\nconfint(model1.20)\n  \nmodel2.20 <- lm(PE.20$endurance ~ PE.20$activeyears)\nsummary(model2.20)\nconfint(model2.20)\n\nmodel3.20 <- lm(PE.20$endurance ~ PE.20$age + PE.20$activeyears)\nsummary(model3.20)\nconfint(model3.20)\n\n# Conduct a model comparison NHST to compare the fit of model2.20 and model3.20\nanova(model2.20, model3.20)\n\n",
    "created" : 1382840129671.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2871093419",
    "id" : "376CFDF8",
    "lastKnownWriteTime" : 1382656576,
    "path" : "~/Documents/Personal/Samantha/LearningMaterials/OnlineCourses_Coursera/StatisticsOne_Princeton/Lab5/supplemental-Stats1.13.Lab.05.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}